import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useState, useEffect } from 'react';
import contractABI from "../config/ABI.json"
import { ethers } from 'ethers';
import verifyNFT from "../util/verifyNft"

const ItemList = ({ items }) => {
  return (
    <div>
      {items.map((item) => (
        <div key={item.id}>
          <h3>{item.name}</h3>
          <img style={{ width: "100px" }} src={item.image} alt={item.name} />
          <p>ID: {item.id}</p>
          <p>Price: {item.price}</p>
        </div>
      ))}
    </div>
  );
};

const ProductList = () => {
  const items = [
    {
      id: 1,
      name: 'Item 1',
      image: 'https://i5.walmartimages.com/asr/285ba3d2-c513-428e-a9c6-52232f060fce.f41ed0b225f2966bb4b51587cf1f0b22.jpeg',
      price: '$10.99',
    },
    {
      id: 2,
      name: 'Item 2',
      image: 'https://i5.walmartimages.com/asr/248e3fe0-f182-43bf-be67-6fd75eeabb70.97866c48de952c947f6f2101caaa6435.jpeg?odnHeight=612&odnWidth=612&odnBg=FFFFFF',
      price: '$19.99',
    },
    // Add more items as needed
  ];
  return (
    <div>
      <h1>List of Items</h1>
      <ItemList items={items} />
    </div>
  );
}

function App() {
  const [isConnected, setIsConnected] = useState(false);
  const [accounts, setAccounts] = useState([]);
  const [isAuthed, setIsAuthed] = useState(false)
  useEffect(() => {
    connectWallet();
  }, []);

  const connectWallet = async () => {
    if (window.ethereum) {
      try {
        const provider = new ethers.providers.Web3Provider(window.ethereum)
        await provider.send("eth_requestAccounts", []);

        setIsConnected(true);
        const signer = provider.getSigner();
        const address = await signer.getAddress();
        setAccounts(address);

        const contractAddress = "0xf4910c763ed4e47a585e2d34baa9a4b611ae448c"
        const tokenId = "100404018718671808255511518461963934948806147913243359527408354483367762198530";
        const tokenContract = new ethers.Contract(contractAddress, contractABI, provider);
        const balance = (await tokenContract.balanceOf(address, tokenId)).toNumber();
        const hasWalmartNFT = await verifyNFT(tokenId);
        if (balance <= 0 || !hasWalmartNFT) {
          console.error("Don't have Walmart Spart NFT");
        } else {
          setIsAuthed(true);
        }
      } catch (error) {
        console.log('Error connecting wallet:', error);
      }
    } else {
      console.log('No Ethereum provider found. Please install MetaMask.');
    }
  };

  return (
    <div className="App">
      <header className="App-header">
        <h1>MetaMask Wallet Integration</h1>
        {!isConnected ? (
          <button onClick={connectWallet}>Connect Wallet</button>
        ) : (
          <div>
            <p>Connected with MetaMask!</p>
            <p>Accounts: {accounts}</p>
            {
              isAuthed ? <ProductList /> : <h2>Get Walmart NFT to see exclusive list of items</h2>}
          </div>
        )}
      </header>
    </div>
  );
}
export default function Home() {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <App />
    </div>
  )
}
